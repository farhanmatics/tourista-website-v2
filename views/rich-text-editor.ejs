<%- include('partials/Header') %>

    <main class="font-[Onest]">
      <%- include('partials/menu') %>
     <!-- ... other head elements ... -->
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet" />
      <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
      <style>
        #editor {
          height: 300px;
        }
        #output {
          border: 1px solid #ccc;
          padding: 10px;
          height: 300px;
          overflow-y: auto;
        }
      </style>
      <!-- About Tourista -->
      <section>
        <div class="md:py-30 mt-10 flex justify-start px-10 py-1">
          <svg xmlns="http://www.w3.org/2000/svg" width="96" height="96" viewBox="0 0 24 24" fill="none" stroke="#8A52BA" stroke-width="1.75" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-grip -mt-4" opacity="0.16">
            <circle cx="12" cy="5" r="1" />
            <circle cx="19" cy="5" r="1" />
            <circle cx="5" cy="5" r="1" />
            <circle cx="12" cy="12" r="1" />
            <circle cx="19" cy="12" r="1" />
            <circle cx="5" cy="12" r="1" />
            <circle cx="12" cy="19" r="1" />
            <circle cx="19" cy="19" r="1" />
            <circle cx="5" cy="19" r="1" />
          </svg>
          <h1 class="-ml-11 mt-5 text-3xl font-bold md:text-4xl">Create Rich Text for Toursita pages!</h1>
        </div>
        <div class="flex p-10">
          <div class="w-1/2">
            <h2 class="text-lg font-semibold">Rich Text Editor</h2>
            <div id="editor"></div>
          </div>
          <div class="w-1/2 pl-4">
            <h2 class="text-lg font-semibold">Output HTML</h2>
            <div id="output"></div>
          </div>
        </div>

        <!-- Title and Slug Textboxes -->
        <div class="flex p-10">
        <div class="mt-4 w-1/2 pl-4">
          <label for="title" class="block text-sm font-medium text-gray-700">Title</label>
          <input type="text" id="title" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2" placeholder="Enter title">
        </div>
        <div class="mt-4 w-1/2 pl-4">
          <label for="slug" class="block text-sm font-medium text-gray-700">Slug</label>
          <input type="text" id="slug" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2" placeholder="Enter slug">
        </div>
        <div class="mt-4 w-1/2 pl-4 pt-6">
          <button id="generate" class="px-4 py-2 bg-blue-500 text-white font-semibold rounded-md shadow-sm hover:bg-blue-600">Generate</button>
          <button id="download" class="px-4 py-2 bg-green-500 text-white font-semibold rounded-md shadow-sm hover:bg-green-600 ml-2">Download</button>
        </div>
        </div>


        <!-- JSON Output Div -->
        <div id="json-output" class="mt-4 p-10 border border-gray-300 rounded-md shadow-sm m-20"></div>
        
      </section>

      <!-- Why Tourista End -->

      <!-- Bottom Starts -->
      <%- include('partials/Bottom') %>
      <!-- Bottom Ends -->
    </main>

    <script>
      // Initialize Quill editor
      const quill = new Quill('#editor', {
        theme: 'snow',
        modules: {
          toolbar: [
            [{ 'header': [1, 2, false] }],
            ['bold', 'italic', 'underline'],        // toggled buttons
            ['link'],                       // link and image
            [{ list: 'ordered' }, { list: 'bullet' }] // lists
          ]
        }
      });
  
      // Update output HTML on text change
      quill.on('text-change', function() {
        const html = quill.root.innerHTML;
        document.getElementById('output').innerText = html; // Display HTML
      });

      // Auto-generate slug from title
    document.getElementById('title').addEventListener('input', function() {
      const title = this.value.trim();
      const slug = title.toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/(^-|-$)/g, '');
      document.getElementById('slug').value = slug;
    });


      // Add event listener to the generate button
    document.getElementById('generate').addEventListener('click', function() {
      const title = document.getElementById('title').value.trim();
      const slug = document.getElementById('slug').value.trim();
      const content = quill.root.innerHTML.trim();

      // Validate fields
      if (!title || !slug || !content) {
        alert('All fields are required.');
        return;
      }

      // Generate JSON
      const jsonOutput = {
        title: title,
        slug: slug,
        content: content
      };

      // Display JSON in the output div
      document.getElementById('json-output').innerText = JSON.stringify(jsonOutput, null, 2);
    }); 

    // Add event listener to the download button
    document.getElementById('download').addEventListener('click', function() {
      const title = document.getElementById('title').value.trim();
      const slug = document.getElementById('slug').value.trim();
      const content = quill.root.innerHTML.trim();

      // Validate fields
      if (!title || !slug || !content) {
        alert('All fields are required.');
        return;
      }

      // Generate JSON
      const jsonOutput = {
        title: title,
        slug: slug,
        content: content
      };

      // Create a blob from the JSON string
      const blob = new Blob([JSON.stringify(jsonOutput, null, 2)], { type: 'application/json' });
      const url = URL.createObjectURL(blob);

      // Create a link element and trigger the download
      const a = document.createElement('a');
      a.href = url;
      a.download = `${slug}.json`;
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      URL.revokeObjectURL(url);
    });
    </script>

<%- include('partials/Footer') %>

